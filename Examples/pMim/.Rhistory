names(form) = colnames(res)
file = paste(miRNA,'-',path,'.html',sep = '')
file = gsub('-','_',file)
file = paste(dir,file,sep= '/')
gene.files[i] = file
print(gvisTable(res,format = form,options = list(width = '100em')),type = 'html',file = file)
}
dim(results)
dir.create(dir)
gene.files = NULL
for(i in 1:dim(results)[1]){
miRNA = results[i,1]
path = results[i,2]
genes = intersect(output$targets[[miRNA]],output$pathways[[path]])
Correlation = output$cor[miRNA,genes]
corP = pnorm(output$corTransform[miRNA,genes]*sign(output$Zmi[miRNA]))
DE = pnorm(output$Zg[genes]*sign(output$Zmi[miRNA]))
if(!is.null(GeneSymbol))genes = GeneSymbol[genes]
res = data.frame(Genes = genes,'one sided DE p-value' = DE,Correlation = Correlation,'Probability of Negative Correlation' = corP)
form = as.list(rep('#.###',4))
names(form) = colnames(res)
file = paste(miRNA,'-',path,'.html',sep = '')
file = gsub('-','_',file)
file = paste(dir,file,sep= '/')
gene.files[i] = file
print(gvisTable(res,format = form,options = list(width = '100em')),type = 'html',file = file)
}
dir.create(dir)
gene.files = NULL
for(i in 1:dim(results)[1]){
miRNA = results[i,1]
path = results[i,2]
genes = intersect(output$targets[[miRNA]],output$pathways[[path]])
Correlation = output$cor[miRNA,genes]
corP = pnorm(output$corTransform[miRNA,genes]*sign(output$Zmi[miRNA]))
DE = pnorm(output$Zg[genes]*sign(output$Zmi[miRNA]))
if(!is.null(GeneSymbol))genes = GeneSymbol[genes]
res = data.frame(Genes = genes,'one sided DE p-value' = DE,Correlation = Correlation,'Probability of Negative Correlation' = corP)
form = as.list(rep('#.###',4))
names(form) = colnames(res)
file = paste(miRNA,'-',path,'.html',sep = '')
file = gsub('-','_',file)
file = paste(dir,file,sep= '/')
gene.files[i] = file
res = res[order(res[,4]),]
print(gvisTable(res,format = form,options = list(width = '100em')),type = 'html',file = file)
}
results[,'Genes']
head(results)
results = output$Results
results = results[results[,'Score'] <= cutoff,]
results = data.frame(results, miRNA.DE.pvalue = 2*pnorm(-abs(output$Zmi[results[,'miRNA']])),genes = rep(NA,dim(results)[1]))
results = results[,c(1,2,6,3,5,4)]
colnames(results) = c('microRNA','Pathway','Genes','Direction','microRNA DE p-value','Intergrative Score')
dir = 'mirpathways'
cutoff = 0.05
load('GeneSymbol.RData')
GeneSymbol = Symbol
results = output$Results
results = results[results[,'Score'] <= cutoff,]
results = data.frame(results, miRNA.DE.pvalue = 2*pnorm(-abs(output$Zmi[results[,'miRNA']])),genes = rep(NA,dim(results)[1]))
results = results[,c(1,2,6,3,5,4)]
colnames(results) = c('microRNA','Pathway','Genes','Direction','microRNA DE p-value','Intergrative Score')
head(results)
results[,'Genes']
paste('<a href=','"',gene.files,'" target="_blank">','genes','</a>',sep="")
results[,'Genes'] = paste('<a href=','"',gene.files,'" target="_blank">','genes','</a>',sep="")
library(googleVis)
form = as.list(rep('#.###',6))
names(form) = colnames(results)
print(gvisTable(as.data.frame(results),format = form,options = list(width = '100em')),type = 'html',file = 'pMimResults.html')
pMimHTML = function(output,dir = mirpathways,cutoff = 0.05,filename = 'pMimResults.html',GeneSymbol = NULL){
results = output$Results
results = results[results[,'Score'] <= cutoff,]
results = data.frame(results, miRNA.DE.pvalue = 2*pnorm(-abs(output$Zmi[results[,'miRNA']])),genes = rep(NA,dim(results)[1]))
results = results[,c(1,2,6,3,5,4)]
colnames(results) = c('microRNA','Pathway','Genes','Direction','microRNA DE p-value','Intergrative Score')
dir.create(dir)
gene.files = NULL
for(i in 1:dim(results)[1]){
miRNA = results[i,1]
path = results[i,2]
genes = intersect(output$targets[[miRNA]],output$pathways[[path]])
Correlation = output$cor[miRNA,genes]
corP = pnorm(output$corTransform[miRNA,genes]*sign(output$Zmi[miRNA]))
DE = pnorm(output$Zg[genes]*sign(output$Zmi[miRNA]))
if(!is.null(GeneSymbol))genes = GeneSymbol[genes]
res = data.frame(Genes = genes,'one sided DE p-value' = DE,Correlation = Correlation,'Probability of Negative Correlation' = corP)
form = as.list(rep('#.###',4))
names(form) = colnames(res)
file = paste(miRNA,'-',path,'.html',sep = '')
file = gsub('-','_',file)
file = paste(dir,file,sep= '/')
gene.files[i] = file
res = res[order(res[,4]),]
print(gvisTable(res,format = form,options = list(width = '100em')),type = 'html',file = file)
}
results[,'Genes'] = paste('<a href=','"',gene.files,'" target="_blank">','genes','</a>',sep="")
library(googleVis)
form = as.list(rep('#.###',6))
names(form) = colnames(results)
print(gvisTable(as.data.frame(results),format = form,options = list(width = '100em')),type = 'html',file = filename)
if(outputHTML = TRUE)gvisTable(as.data.frame(results),format = form,options = list(width = '100em'))
}
pMimHTML = function(output,dir = mirpathways,cutoff = 0.05,filename = 'pMimResults.html',GeneSymbol = NULL,outputHTML=FALSE){
results = output$Results
results = results[results[,'Score'] <= cutoff,]
results = data.frame(results, miRNA.DE.pvalue = 2*pnorm(-abs(output$Zmi[results[,'miRNA']])),genes = rep(NA,dim(results)[1]))
results = results[,c(1,2,6,3,5,4)]
colnames(results) = c('microRNA','Pathway','Genes','Direction','microRNA DE p-value','Intergrative Score')
dir.create(dir)
gene.files = NULL
for(i in 1:dim(results)[1]){
miRNA = results[i,1]
path = results[i,2]
genes = intersect(output$targets[[miRNA]],output$pathways[[path]])
Correlation = output$cor[miRNA,genes]
corP = pnorm(output$corTransform[miRNA,genes]*sign(output$Zmi[miRNA]))
DE = pnorm(output$Zg[genes]*sign(output$Zmi[miRNA]))
if(!is.null(GeneSymbol))genes = GeneSymbol[genes]
res = data.frame(Genes = genes,'one sided DE p-value' = DE,Correlation = Correlation,'Probability of Negative Correlation' = corP)
form = as.list(rep('#.###',4))
names(form) = colnames(res)
file = paste(miRNA,'-',path,'.html',sep = '')
file = gsub('-','_',file)
file = paste(dir,file,sep= '/')
gene.files[i] = file
res = res[order(res[,4]),]
print(gvisTable(res,format = form,options = list(width = '100em')),type = 'html',file = file)
}
results[,'Genes'] = paste('<a href=','"',gene.files,'" target="_blank">','genes','</a>',sep="")
library(googleVis)
form = as.list(rep('#.###',6))
names(form) = colnames(results)
print(gvisTable(as.data.frame(results),format = form,options = list(width = '100em')),type = 'html',file = filename)
if(outputHTML == TRUE)gvisTable(as.data.frame(results),format = form,options = list(width = '100em'))
}
pMimHTML(output,dir = 'mirpathways',cutoff = 0.05,filename = 'pMimResults.html',GeneSymbol = Symbol,outputHTML=TRUE)
require(googleVis)
miRNA = results[i,1]
path = results[i,2]
genes = intersect(output$targets[[miRNA]],output$pathways[[path]])
Correlation = output$cor[miRNA,genes]
corP = pnorm(output$corTransform[miRNA,genes]*sign(output$Zmi[miRNA]))
DE = pnorm(output$Zg[genes]*sign(output$Zmi[miRNA]))
if(!is.null(GeneSymbol))genes = GeneSymbol[genes]
res = data.frame(Genes = genes,'one sided DE p-value' = DE,Correlation = Correlation,'Probability of Negative Correlation' = corP)
form = as.list(rep('#.###',4))
names(form) = colnames(res)
file = paste(miRNA,'-',path,'.html',sep = '')
file = gsub('-','_',file)
file = paste(dir,file,sep= '/')
gene.files[i] = file
res = res[order(res[,4]),]
res
i
i = 1
miRNA = results[i,1]
path = results[i,2]
genes = intersect(output$targets[[miRNA]],output$pathways[[path]])
Correlation = output$cor[miRNA,genes]
corP = pnorm(output$corTransform[miRNA,genes]*sign(output$Zmi[miRNA]))
DE = pnorm(output$Zg[genes]*sign(output$Zmi[miRNA]))
if(!is.null(GeneSymbol))genes = GeneSymbol[genes]
res = data.frame(Genes = genes,'one sided DE p-value' = DE,Correlation = Correlation,'Probability of Negative Correlation' = corP)
form = as.list(rep('#.###',4))
names(form) = colnames(res)
file = paste(miRNA,'-',path,'.html',sep = '')
file = gsub('-','_',file)
file = paste(dir,file,sep= '/')
gene.files[i] = file
res = res[order(res[,4]),]
res
genes
path
miRNA
intersect(output$targets[[miRNA]],output$pathways[[path]])
miRNA = as.character(results[i,1])
path = as.character(results[i,2])
genes = intersect(output$targets[[miRNA]],output$pathways[[path]])
genes
miRNA = as.character(results[i,1])
path = as.character(results[i,2])
genes = intersect(output$targets[[miRNA]],output$pathways[[path]])
Correlation = output$cor[miRNA,genes]
corP = pnorm(output$corTransform[miRNA,genes]*sign(output$Zmi[miRNA]))
DE = pnorm(output$Zg[genes]*sign(output$Zmi[miRNA]))
if(!is.null(GeneSymbol))genes = GeneSymbol[genes]
res = data.frame(Genes = genes,'one sided DE p-value' = DE,Correlation = Correlation,'Probability of Negative Correlation' = corP)
form = as.list(rep('#.###',4))
names(form) = colnames(res)
file = paste(miRNA,'-',path,'.html',sep = '')
file = gsub('-','_',file)
file = paste(dir,file,sep= '/')
gene.files[i] = file
res = res[order(res[,4]),]
res
?library
library(googleVis,verbose = FALSE)
?ggogeVis
install.packages("C:/Users/Ellis/Dropbox/R packages/sydSeq/sydSeq_1.1.4.zip", repos = NULL)
library(pMim)
library(sydSeq)
?pMim
?outputHTML
?pMimHTML
??pMimHTML
pMimHTML
pMim
?pMim
?pMimHTML
pMimHTML
pMimHTML
install.packages("C:/Users/Ellis/Dropbox/R packages/sydSeq/sydSeq_1.1.5.zip", repos = NULL)
?pMimHTML
library(sydSeq)
?pMimHTML
pMiMHTML
library(sydSeq)
pMiMHTML
?pMimHTML
?pMimHTML
pMimHTML
results
### Load packages
library(sydSeq) #For pMimCor
library(multiMiR) #For getting miRNA target genes easily
library(goseq) #For getting KEGG pathways easily
library(KEGG.db)
### Load Notch2 Knockout counts for use as an example.
load('counts.RData')
#This loaded the gene counts "counts" and the miRNA counts "countsMi".
### For simplicity, while obviously not ideal, for the following we will work with TMM normalized data. We will also restrict to genes with average count over 20.
tmm = function(DAT){
TMM = DAT[1,]
for(i in (1:dim(DAT)[2])){
Data = cbind(DAT[,i],rowMeans(DAT))
X = Data[,]
X[rowSums(Data<100)>0,] = NA
Y = log(X[,1])-log(X[,2])
TMM1 = mean(Y,na.rm = TRUE,trim = .3)
TMM[i] = exp(TMM1)
}
TMM = ((TMM)/exp(mean(log(TMM))))
TMM = 1/TMM
TMM
}
Data = counts[rowSums(counts)>=20,]
Data = Data*matrix(tmm(Data),dim(Data)[1],dim(Data)[2],byrow = TRUE)
DataMi = countsMi[rowSums(countsMi)>=20,]
DataMi = DataMi*matrix(tmm(DataMi),dim(DataMi)[1],dim(DataMi)[2],byrow = TRUE)
###KEGG can be loaded as follows
kegg = getgo(rownames(Data), fetch.cats = "KEGG", genome = "mm10", id = "ensGene")
kegg2ens = Biobase::reverseSplit(kegg)
kname = mget(names(kegg2ens), env = KEGGPATHID2NAME)
names(kegg2ens) = kname
#kegg2ens is our list of pathways
### miRNA Targets can be loaded as follows
x = get.multimir(org = "mmu", mirna = NULL, target = rownames(Data), disease.drug = NULL,
table = "targetscan", predicted.cutoff = 30, predicted.cutoff.type = "p",
summary = FALSE)
x = x[[1]]
# We do not have mature miRNA counts, so do the following.
miR = rownames(DataMi)
miR = sub("mir", "miR", miR)
miR = c(miR, paste(miR, "-3p", sep = ""), paste(miR, "-5p", sep = ""))
miR = split(miR, c(rownames(DataMi), rownames(DataMi), rownames(DataMi)))
targets = lapply(miR, function(z) unique(x[x[, "mature_mirna_id"] %in% z, "target_ensembl"]))
#targets is our list of miRNA targets
classes = substring(colnames(Data),1,2)
names(classes) = colnames(Data)
output = pMim(DataMi = DataMi, DataG = Data, classes = classes, targets = targets, pathways = kegg2ens)
head(output$Results,10)
test = as.data.frame(head(output$Results,10))
form = rep('%.4G',4)
colnames(form)= colnames(test)
test
form = rep('%.4G',4)
names(form)= colnames(test)
test = print(gvisTable(test,format = form,options = list(width = '100em')),type = 'html',file = 'test.html')
library(googleVis)
test = print(gvisTable(test,format = form,options = list(width = '100em')),type = 'html',file = 'test.html')
form = as.list(rep('%.4G',4))
names(form)= colnames(test)
test = print(gvisTable(test,format = form,options = list(width = '100em')),type = 'html',file = 'test.html')
test = as.data.frame(head(output$Results,10))
form = as.list(rep('%.4G',4))
names(form)= colnames(test)
test = print(gvisTable(test,format = form,options = list(width = '100em')),type = 'html',file = 'test.html')
class(test[,4])
class(test[4])
test[4]
test[,4]
test
test = as.data.frame(head(output$Results,10))
class(test[,4])
pMimHTML = function(output,dir = 'mirpathways',cutoff = 0.05,filename = 'pMimResults.html',GeneSymbol = NULL,outputHTML=FALSE){
require(googleVis)
results = output$Results
results = results[results[,'Score'] <= cutoff,]
results[,'Score'] = as.numeric(results[,'Score'])
results = data.frame(results, miRNA.DE.pvalue = 2*pnorm(-abs(output$Zmi[results[,'miRNA']])),genes = rep(NA,dim(results)[1]))
results = results[,c(1,2,6,3,5,4)]
colnames(results) = c('microRNA','Pathway','Genes','Direction','microRNA DE p-value','Intergrative Score')
dir.create(dir)
gene.files = NULL
for(i in 1:dim(results)[1]){
miRNA = as.character(results[i,1])
path = as.character(results[i,2])
genes = intersect(output$targets[[miRNA]],output$pathways[[path]])
Correlation = output$cor[miRNA,genes]
corP = pnorm(output$corTransform[miRNA,genes]*sign(output$Zmi[miRNA]))
DE = pnorm(output$Zg[genes]*sign(output$Zmi[miRNA]))
if(!is.null(GeneSymbol))genes = GeneSymbol[genes]
res = data.frame(Genes = genes,'One Sided DE P-value' = DE,Correlation = Correlation,'One Sided Correlation P-value' = corP)
form = as.list(rep('#.###',4))
names(form) = colnames(res)
file = paste(miRNA,'-',path,'.html',sep = '')
file = gsub('-','_',file)
file = paste(dir,file,sep= '/')
gene.files[i] = file
res = res[order(res[,4]),]
print(gvisTable(res,format = form,options = list(width = '100em')),type = 'html',file = file)
}
results[,'Genes'] = paste('<a href=','"',gene.files,'" target="_blank">','genes','</a>',sep="")
library(googleVis)
form = as.list(rep('#.###',6))
names(form) = colnames(results)
results = as.data.frame(results)
print(gvisTable(results,format = form,options = list(width = '100em')),type = 'html',file = filename)
if(outputHTML == TRUE)gvisTable(results,format = form,options = list(width = '100em'))
}
pMimHTML(output)
class(test[4])
res = output$Results
head(res)
class)res
class(res)
?as.data.frame
results = output$Results
results = results[results[,'Score'] <= cutoff,]
results[,'Score'] = as.numeric(results[,'Score'])
cutoff = 0.05
results = output$Results
results = results[results[,'Score'] <= cutoff,]
results[,'Score'] = as.numeric(results[,'Score'])
results[,'Score'] <= cutoff
results
results = output$Results
results = results[results[,'Score'] <= cutoff,]
?dataframe
?data.frame
results = output$Results
results = results[results[,'Score'] <= cutoff,]
results[,'Score'] = as.numeric(results[,'Score'])
results = data.frame(results, miRNA.DE.pvalue = 2*pnorm(-abs(output$Zmi[results[,'miRNA']])),genes = rep(NA,dim(results)[1]),stringsAsFactors = FALSE)
head(results)
class(results[,'Score'])
results = output$Results
results = results[results[,'Score'] <= cutoff,]
results = data.frame(results, miRNA.DE.pvalue = 2*pnorm(-abs(output$Zmi[results[,'miRNA']])),genes = rep(NA,dim(results)[1]),stringsAsFactors = FALSE)
results[,'Score'] = as.numeric(results[,'Score'])
class(results[,'Score'])
head(results)
pMimHTML = function(output,dir = 'mirpathways',cutoff = 0.05,filename = 'pMimResults.html',GeneSymbol = NULL,outputHTML=FALSE){
require(googleVis)
results = output$Results
results = results[results[,'Score'] <= cutoff,]
results = data.frame(results, miRNA.DE.pvalue = 2*pnorm(-abs(output$Zmi[results[,'miRNA']])),genes = rep(NA,dim(results)[1]),stringsAsFactors = FALSE)
results[,'Score'] = as.numeric(results[,'Score'])
results = results[,c(1,2,6,3,5,4)]
colnames(results) = c('microRNA','Pathway','Genes','Direction','microRNA DE p-value','Intergrative Score')
dir.create(dir)
gene.files = NULL
for(i in 1:dim(results)[1]){
miRNA = as.character(results[i,1])
path = as.character(results[i,2])
genes = intersect(output$targets[[miRNA]],output$pathways[[path]])
Correlation = output$cor[miRNA,genes]
corP = pnorm(output$corTransform[miRNA,genes]*sign(output$Zmi[miRNA]))
DE = pnorm(output$Zg[genes]*sign(output$Zmi[miRNA]))
if(!is.null(GeneSymbol))genes = GeneSymbol[genes]
res = data.frame(Genes = genes,'One Sided DE P-value' = DE,Correlation = Correlation,'One Sided Correlation P-value' = corP)
form = as.list(rep('#.###',4))
names(form) = colnames(res)
file = paste(miRNA,'-',path,'.html',sep = '')
file = gsub('-','_',file)
file = paste(dir,file,sep= '/')
gene.files[i] = file
res = res[order(res[,4]),]
print(gvisTable(res,format = form,options = list(width = '100em')),type = 'html',file = file)
}
results[,'Genes'] = paste('<a href=','"',gene.files,'" target="_blank">','genes','</a>',sep="")
library(googleVis)
form = as.list(rep('#.###',6))
names(form) = colnames(results)
results = as.data.frame(results)
print(gvisTable(results,format = form,options = list(width = '100em')),type = 'html',file = filename)
if(outputHTML == TRUE)gvisTable(results,format = form,options = list(width = '100em'))
}
pMimHTML(output)
pMimHTML = function(output,dir = 'mirpathways',cutoff = 0.05,filename = 'pMimResults.html',GeneSymbol = NULL,outputHTML=FALSE){
require(googleVis)
results = output$Results
results = results[results[,'Score'] <= cutoff,]
results = data.frame(results, miRNA.DE.pvalue = 2*pnorm(-abs(output$Zmi[results[,'miRNA']])),genes = rep(NA,dim(results)[1]),stringsAsFactors = FALSE)
results[,'Score'] = as.numeric(results[,'Score'])
results = results[,c(1,2,6,3,5,4)]
colnames(results) = c('microRNA','Pathway','Genes','Direction','microRNA DE p-value','Intergrative Score')
dir.create(dir)
gene.files = NULL
for(i in 1:dim(results)[1]){
miRNA = as.character(results[i,1])
path = as.character(results[i,2])
genes = intersect(output$targets[[miRNA]],output$pathways[[path]])
Correlation = output$cor[miRNA,genes]
corP = pnorm(output$corTransform[miRNA,genes]*sign(output$Zmi[miRNA]))
DE = pnorm(output$Zg[genes]*sign(output$Zmi[miRNA]))
if(!is.null(GeneSymbol))genes = GeneSymbol[genes]
res = data.frame(Genes = genes,'One Sided DE P-value' = DE,Correlation = Correlation,'One Sided Correlation P-value' = corP)
form = as.list(rep('#.###',4))
names(form) = colnames(res)
file = paste(miRNA,'-',path,'.html',sep = '')
file = gsub('-','_',file)
file = paste(dir,file,sep= '/')
gene.files[i] = file
res = res[order(res[,4]),]
print(gvisTable(res,format = form),type = 'html',file = file)
}
results[,'Genes'] = paste('<a href=','"',gene.files,'" target="_blank">','genes','</a>',sep="")
library(googleVis)
form = as.list(rep('#.###',6))
names(form) = colnames(results)
results = as.data.frame(results)
print(gvisTable(results,format = form),type = 'html',file = filename)
if(outputHTML == TRUE)gvisTable(results,format = form,options = list(width = '100em'))
}
pMimHTML(output)
pMimHTML = function(output,dir = 'mirpathways',cutoff = 0.05,filename = 'pMimResults.html',GeneSymbol = NULL,outputHTML=FALSE){
require(googleVis)
results = output$Results
results = results[results[,'Score'] <= cutoff,]
results = data.frame(results, miRNA.DE.pvalue = 2*pnorm(-abs(output$Zmi[results[,'miRNA']])),genes = rep(NA,dim(results)[1]),stringsAsFactors = FALSE)
results[,'Score'] = as.numeric(results[,'Score'])
results = results[,c(1,2,6,3,5,4)]
colnames(results) = c('microRNA','Pathway','Genes','Direction','microRNA DE p-value','Intergrative Score')
dir.create(dir)
gene.files = NULL
for(i in 1:dim(results)[1]){
miRNA = as.character(results[i,1])
path = as.character(results[i,2])
genes = intersect(output$targets[[miRNA]],output$pathways[[path]])
Correlation = output$cor[miRNA,genes]
corP = pnorm(output$corTransform[miRNA,genes]*sign(output$Zmi[miRNA]))
DE = pnorm(output$Zg[genes]*sign(output$Zmi[miRNA]))
if(!is.null(GeneSymbol))genes = GeneSymbol[genes]
res = data.frame(Genes = genes,'One Sided DE P-value' = DE,Correlation = Correlation,'One Sided Correlation P-value' = corP)
form = as.list(rep('#.###',4))
names(form) = colnames(res)
file = paste(miRNA,'-',path,'.html',sep = '')
file = gsub('-','_',file)
file = paste(dir,file,sep= '/')
gene.files[i] = file
res = res[order(res[,4]),]
print(gvisTable(res,format = form,options = list(width = '50em')),type = 'html',file = file)
}
results[,'Genes'] = paste('<a href=','"',gene.files,'" target="_blank">','genes','</a>',sep="")
library(googleVis)
form = as.list(rep('#.###',6))
names(form) = colnames(results)
results = as.data.frame(results)
print(gvisTable(results,format = form,options = list(width = '80em')),type = 'html',file = filename)
if(outputHTML == TRUE)gvisTable(results,format = form,options = list(width = '100em'))
}
pMimHTML(output)
pMimHTML = function(output,dir = 'mirpathways',cutoff = 0.05,filename = 'pMimResults.html',GeneSymbol = NULL,outputHTML=FALSE){
require(googleVis)
results = output$Results
results = results[results[,'Score'] <= cutoff,]
results = data.frame(results, miRNA.DE.pvalue = 2*pnorm(-abs(output$Zmi[results[,'miRNA']])),genes = rep(NA,dim(results)[1]),stringsAsFactors = FALSE)
results[,'Score'] = as.numeric(results[,'Score'])
results = results[,c(1,2,6,3,5,4)]
colnames(results) = c('microRNA','Pathway','Genes','Direction','microRNA DE p-value','Intergrative Score')
dir.create(dir)
gene.files = NULL
for(i in 1:dim(results)[1]){
miRNA = as.character(results[i,1])
path = as.character(results[i,2])
genes = intersect(output$targets[[miRNA]],output$pathways[[path]])
Correlation = output$cor[miRNA,genes]
corP = pnorm(output$corTransform[miRNA,genes]*sign(output$Zmi[miRNA]))
DE = pnorm(output$Zg[genes]*sign(output$Zmi[miRNA]))
if(!is.null(GeneSymbol))genes = GeneSymbol[genes]
res = data.frame(Genes = genes,'One Sided DE P-value' = DE,Correlation = Correlation,'One Sided Correlation P-value' = corP)
form = as.list(rep('#.###',4))
names(form) = colnames(res)
file = paste(miRNA,'-',path,'.html',sep = '')
file = gsub('-','_',file)
file = paste(dir,file,sep= '/')
gene.files[i] = file
res = res[order(res[,4]),]
print(gvisTable(res,format = form,options = list(width = '60em')),type = 'html',file = file)
}
results[,'Genes'] = paste('<a href=','"',gene.files,'" target="_blank">','genes','</a>',sep="")
library(googleVis)
form = as.list(rep('#.###',6))
names(form) = colnames(results)
results = as.data.frame(results)
print(gvisTable(results,format = form,options = list(width = '80em')),type = 'html',file = filename)
if(outputHTML == TRUE)gvisTable(results,format = form,options = list(width = '100em'))
}
pMimHTML(output)
