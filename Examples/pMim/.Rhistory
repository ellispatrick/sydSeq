}
if (verbose == TRUE) {
if (sum(rowMeans(DataG) < 5) > 0) {
cat("You might want to consider filtering out genes with small average expression from your data.\n")
}
}
if (verbose == TRUE) {
if (sum(rowMeans(DataMi) < 5) > 0) {
cat("You might want to consider filtering out miRNA with small average expression from your data.\n")
}
}
y = names(classes)
X = t(DataG)
Y = t(DataMi)
if (stat == "cor") {
corYX = cor(Y[y, ], X[y, ])
n = length(y)
if (corP == "estimate") {
TR = corYX
TR[] = ((rank(corYX) - 0.5)/length(corYX))
TR = qnorm(TR)
}
else {
if (n > 3) {
TR <- sqrt(n - 3) * atanh(corYX)
}
else {
cat("Need more replicates or use cor=\"estimate\"")
break
}
}
}
if (is.null(Zmi)) {
require(limma)
design = model.matrix(~classes)
Dat = DataMi[, names(classes)]
fit = lmFit(Dat, design)
ordinary.t <- fit$coef/fit$stdev.unscaled/pmax(pmax(fit$sigma,
sqrt(rowMeans(Dat))), 1)
Tmi = ordinary.t[, 2]
Zmi = qnorm(pt((Tmi), fit$df.res))
}
if (is.null(Zg)) {
require(limma)
design = model.matrix(~classes)
Dat = DataG[, names(classes)]
fit = lmFit(Dat, design)
ordinary.t <- fit$coef/fit$stdev.unscaled/pmax(pmax(fit$sigma,
sqrt(rowMeans(Dat))), 1)
Tg = ordinary.t[, 2]
Zg = qnorm(pt((Tg), fit$df.res))
}
mi = colnames(Y)
msgr = intersect(unlist(pathways), unlist(targets))
mapMat = matrix(0, length(mi), length(msgr))
rownames(mapMat) = mi
colnames(mapMat) = msgr
for (i in rownames(mapMat)) {
if (randomTarg == TRUE) {
mapMat[i, sample(colnames(mapMat), sum(msgr %in%
targets[[i]]))] = 1
}
else {
mapMat[i, msgr %in% targets[[i]]] = 1
}
}
use = names(which(rowSums(mapMat) > 0))
mapMat = mapMat[use, ]
mi = use
pathname = names(pathways)
pathMat = matrix(0, length(pathname), length(msgr))
rownames(pathMat) = pathname
colnames(pathMat) = msgr
for (j in 1:length(pathname)) {
if (randomPath == TRUE) {
pathMat[j, sample(colnames(mapMat), sum(msgr %in%
pathways[[j]]))] = 1
}
else {
pathMat[j, msgr %in% pathways[[j]]] = 1
}
}
N = mapMat %*% t(pathMat)
test = which(N >= nInt, 2)
G = matrix(NA, length(mi), length(pathname))
rownames(G) = mi
colnames(G) = pathname
Tmat = corYX
Tmat[] = NA
for (k in 1:nrow(test)) {
i = mi[test[k, 1]]
j = test[k, 2]
pathway = pathMat[j, ]
tr = TR[i, ]
binding = mapMat[i, ]
if (tolower(stat) == "de") {
t = Zg[names(TR[i, ])]
}
if (tolower(stat) == "cor") {
t = TR[i, ]
}
Tmat[i, ] = t
g = sum(t[names(which(binding * pathway == 1))])/sqrt(sum(binding *
pathway))
G[i, j] = pnorm(g)
}
G = t(apply(G, 1, function(x) {
x[!is.na(x)] = p.adjust(x[!is.na(x)], "fdr")
return(x)
}))
Score = pchisq(-2 * (log(1 - G) + log(1 - matrix(pnorm(-abs(Zmi))[rownames(G)],
dim(G)[1], dim(G)[2], byrow = FALSE))), 4)
pval = Score
updown = matrix(sign(Zmi)[rownames(G)], dim(G)[1], dim(G)[2],
byrow = FALSE)
updown[updown == 1] = "Up"
updown[updown == -1] = "Down"
use = which(!is.na(pval), 2)
res = cbind(rownames(use) ,  colnames(pval)[use[,2]] , updown[use] , pval[use])
res = res[order(res[, 4]), ]
colnames(res) = c("miRNA", "Pathways", "direction", "Score")
direction = NULL
if(!(is.null(Zmi)&is.null(Zg))){
class1 = gsub('classes','',colnames(design)[2])
class2 = classes[!classes%in%class1][1]
direction = paste('"Up" is',class1,  'expression greater than', class2, 'expression in miRNA')
cat(direction,'\n')
}
list(Results = res, Scores = Score, Zg = Zg, Zmi = Zmi, cor = corYX, corTransform = TR,Direction = direction,targets = targets, pathways = pathways)
}
pnorm(output$corTransform[miRNA,genes]*sign(output$Zmi[miRNA]))
output$corTransform[miRNA,genes]
output = pMim(DataMi = DataMi, DataG = Data, classes = classes, targets = targets, pathways = kegg2ens)
pnorm(output$corTransform[miRNA,genes]*sign(output$Zmi[miRNA]))
pnorm(output$Zg[genes]*sign(output$Zmi[miRNA])
)
head(ensembl.gene)
dim(ensembl.gene)
miRNA = results[i,1]
path = results[i,2]
genes = intersect(output$targets[[miRNA]],output$pathways[[path]])
Correlation = output$cor[miRNA,genes]
corP = pnorm(output$corTransform[miRNA,genes]*sign(output$Zmi[miRNA]))
DE = pnorm(output$Zg[genes]*sign(output$Zmi[miRNA]))
res = data.frame(Genes = genes,'one sided DE p-value',Correlation = Correlation,'Probability of Negative Correlation' = corP)
}
res
miRNA = results[i,1]
path = results[i,2]
genes = intersect(output$targets[[miRNA]],output$pathways[[path]])
Correlation = output$cor[miRNA,genes]
corP = pnorm(output$corTransform[miRNA,genes]*sign(output$Zmi[miRNA]))
DE = pnorm(output$Zg[genes]*sign(output$Zmi[miRNA]))
res = data.frame(Genes = genes,'one sided DE p-value' = DE,Correlation = Correlation,'Probability of Negative Correlation' = corP)
res
dir = 'mirpathways'
getwd()
dir.create(dir)
file = paste(miRNA,path,'html',sep = '.')
file
paste(dir,file,sep= '/')
miRNA = results[i,1]
path = results[i,2]
genes = intersect(output$targets[[miRNA]],output$pathways[[path]])
Correlation = output$cor[miRNA,genes]
corP = pnorm(output$corTransform[miRNA,genes]*sign(output$Zmi[miRNA]))
DE = pnorm(output$Zg[genes]*sign(output$Zmi[miRNA]))
res = data.frame(Genes = genes,'one sided DE p-value' = DE,Correlation = Correlation,'Probability of Negative Correlation' = corP)
form = as.list(rep('#.###',4))
file = paste(miRNA,path,'html',sep = '.')
print(gvisTable(res,formats=form,options = list(width = '100em')),type = 'html',file = paste(dir,file,sep= '/'))
res
gvisTable(res,formats=form,options = list(width = '100em'))
print(gvisTable(res,formats=form,options = list(width = '100em')),type = 'html',file = paste(dir,file,sep= '/'))
paste(miRNA,'-',path,'.html',sep = '')
miRNA = results[i,1]
path = results[i,2]
genes = intersect(output$targets[[miRNA]],output$pathways[[path]])
Correlation = output$cor[miRNA,genes]
corP = pnorm(output$corTransform[miRNA,genes]*sign(output$Zmi[miRNA]))
DE = pnorm(output$Zg[genes]*sign(output$Zmi[miRNA]))
res = data.frame(Genes = genes,'one sided DE p-value' = DE,Correlation = Correlation,'Probability of Negative Correlation' = corP)
form = as.list(rep('#.###',4))
file = paste(miRNA,'-',path,'.html',sep = '')
dim(res)
print(gvisTable(res,formats=form,options = list(width = '100em')),type = 'html',file = paste(dir,file,sep= '/'))
file = gsub('-','_',file)
print(gvisTable(res,formats=form,options = list(width = '100em')),type = 'html',file = paste(dir,file,sep= '/'))
print(gvisTable(res,options = list(width = '100em')),type = 'html',file = paste(dir,file,sep= '/'))
gvisTable
??gvisTable
form = as.list(rep('#.###',4))
names(form) = colnames(res)
file = paste(miRNA,'-',path,'.html',sep = '')
file = gsub('-','_',file)
print(gvisTable(res,options = list(width = '100em')),type = 'html',file = paste(dir,file,sep= '/'))
form = as.list(rep('#.###',4))
names(form) = colnames(res)
file = paste(miRNA,'-',path,'.html',sep = '')
file = gsub('-','_',file)
print(gvisTable(res,options = list(width = '100em')),type = 'html',file = paste(dir,file,sep= '/'))
print(gvisTable(res,format = form,options = list(width = '100em')),type = 'html',file = paste(dir,file,sep= '/'))
??ensem
goseq
?pwf
pwf
getgo
.ID_MAP
goseq:::.ID_MAP
Symbols = mget(output$Zg,env = ENSEMBL2EG)
Symbols = mget(output$Zg,env = 'ENSEMBL2EG')
library(org.Hs.eg.db)
Symbols = mget(output$Zg,env = 'ENSEMBL2EG')
Symbols = mget(output$Zg,env = ENSEMBL2EG)
Symbols = mget(output$Zg,env = org.Hs.egENSEMBL2EG)
?mget
Symbols = mget(output$Zg,env = org.Hs.egENSEMBL2EG,ifnotfound = NA)
names(output$Zg)
Symbols = mget(names(output$Zg),env = org.Hs.egENSEMBL2EG,ifnotfound = NA)
Symbols
library(org.Mm.eg.db)
Symbols = mget(names(output$Zg),env = org.Mm.egENSEMBL2EG,ifnotfound = NA)
Symbols
lapply(Symbols,length)
hist(unlist(lapply(Symbols,length)))
table(unlist(lapply(Symbols,length)))
Symbols = lapply(Symbols,mget,org.Mm.egSYMBOL)
Symbols[1]
mget(Symbols[[1]],org.Mm.egSYMBOL)
Symbols = lapply(Symbols,mget,org.Mm.egSYMBOL,ifnotfound = NA)
table(unlist(lapply(Symbols,length)))
sum(is.na(unlist(lapply(Symbols,length))))
lapply(Symbols[1],mget,org.Mm.egSYMBOL,ifnotfound = NA)
lapply(Symbols[2],mget,org.Mm.egSYMBOL,ifnotfound = NA)
Symbols
table(unlist(lapply(Symbols,length)))
which(unlist(lapply(Symbols,length))==8)
lapply(Symbols[14166],mget,org.Mm.egSYMBOL,ifnotfound = NA)
system('ls')
load('GeneSymbol.RData')
Symbol
GeneSymbol = Symbol
miRNA = results[i,1]
path = results[i,2]
genes = intersect(output$targets[[miRNA]],output$pathways[[path]])
Correlation = output$cor[miRNA,genes]
corP = pnorm(output$corTransform[miRNA,genes]*sign(output$Zmi[miRNA]))
DE = pnorm(output$Zg[genes]*sign(output$Zmi[miRNA]))
if(!is.null(GeneSymbol))Genes = GeneSymbol[Genes]
res = data.frame(Genes = genes,'one sided DE p-value' = DE,Correlation = Correlation,'Probability of Negative Correlation' = corP)
form = as.list(rep('#.###',4))
names(form) = colnames(res)
file = paste(miRNA,'-',path,'.html',sep = '')
file = gsub('-','_',file)
miRNA = results[i,1]
path = results[i,2]
genes = intersect(output$targets[[miRNA]],output$pathways[[path]])
Correlation = output$cor[miRNA,genes]
corP = pnorm(output$corTransform[miRNA,genes]*sign(output$Zmi[miRNA]))
DE = pnorm(output$Zg[genes]*sign(output$Zmi[miRNA]))
if(!is.null(GeneSymbol))genes = GeneSymbol[genes]
res = data.frame(Genes = genes,'one sided DE p-value' = DE,Correlation = Correlation,'Probability of Negative Correlation' = corP)
form = as.list(rep('#.###',4))
names(form) = colnames(res)
file = paste(miRNA,'-',path,'.html',sep = '')
file = gsub('-','_',file)
genes
print(gvisTable(res,format = form,options = list(width = '100em')),type = 'html',file = paste(dir,file,sep= '/'))
dir.create(dir)
gene.files = NULL
for(i in 1:dim(results)[2]){
miRNA = results[i,1]
path = results[i,2]
genes = intersect(output$targets[[miRNA]],output$pathways[[path]])
Correlation = output$cor[miRNA,genes]
corP = pnorm(output$corTransform[miRNA,genes]*sign(output$Zmi[miRNA]))
DE = pnorm(output$Zg[genes]*sign(output$Zmi[miRNA]))
if(!is.null(GeneSymbol))genes = GeneSymbol[genes]
res = data.frame(Genes = genes,'one sided DE p-value' = DE,Correlation = Correlation,'Probability of Negative Correlation' = corP)
form = as.list(rep('#.###',4))
names(form) = colnames(res)
file = paste(miRNA,'-',path,'.html',sep = '')
file = gsub('-','_',file)
file = paste(dir,file,sep= '/')
gene.files[i] = files
print(gvisTable(res,format = form,options = list(width = '100em')),type = 'html',file = file)
}
dir.create(dir)
gene.files = NULL
for(i in 1:dim(results)[2]){
miRNA = results[i,1]
path = results[i,2]
genes = intersect(output$targets[[miRNA]],output$pathways[[path]])
Correlation = output$cor[miRNA,genes]
corP = pnorm(output$corTransform[miRNA,genes]*sign(output$Zmi[miRNA]))
DE = pnorm(output$Zg[genes]*sign(output$Zmi[miRNA]))
if(!is.null(GeneSymbol))genes = GeneSymbol[genes]
res = data.frame(Genes = genes,'one sided DE p-value' = DE,Correlation = Correlation,'Probability of Negative Correlation' = corP)
form = as.list(rep('#.###',4))
names(form) = colnames(res)
file = paste(miRNA,'-',path,'.html',sep = '')
file = gsub('-','_',file)
file = paste(dir,file,sep= '/')
gene.files[i] = file
print(gvisTable(res,format = form,options = list(width = '100em')),type = 'html',file = file)
}
dim(results)
dir.create(dir)
gene.files = NULL
for(i in 1:dim(results)[1]){
miRNA = results[i,1]
path = results[i,2]
genes = intersect(output$targets[[miRNA]],output$pathways[[path]])
Correlation = output$cor[miRNA,genes]
corP = pnorm(output$corTransform[miRNA,genes]*sign(output$Zmi[miRNA]))
DE = pnorm(output$Zg[genes]*sign(output$Zmi[miRNA]))
if(!is.null(GeneSymbol))genes = GeneSymbol[genes]
res = data.frame(Genes = genes,'one sided DE p-value' = DE,Correlation = Correlation,'Probability of Negative Correlation' = corP)
form = as.list(rep('#.###',4))
names(form) = colnames(res)
file = paste(miRNA,'-',path,'.html',sep = '')
file = gsub('-','_',file)
file = paste(dir,file,sep= '/')
gene.files[i] = file
print(gvisTable(res,format = form,options = list(width = '100em')),type = 'html',file = file)
}
dir.create(dir)
gene.files = NULL
for(i in 1:dim(results)[1]){
miRNA = results[i,1]
path = results[i,2]
genes = intersect(output$targets[[miRNA]],output$pathways[[path]])
Correlation = output$cor[miRNA,genes]
corP = pnorm(output$corTransform[miRNA,genes]*sign(output$Zmi[miRNA]))
DE = pnorm(output$Zg[genes]*sign(output$Zmi[miRNA]))
if(!is.null(GeneSymbol))genes = GeneSymbol[genes]
res = data.frame(Genes = genes,'one sided DE p-value' = DE,Correlation = Correlation,'Probability of Negative Correlation' = corP)
form = as.list(rep('#.###',4))
names(form) = colnames(res)
file = paste(miRNA,'-',path,'.html',sep = '')
file = gsub('-','_',file)
file = paste(dir,file,sep= '/')
gene.files[i] = file
res = res[order(res[,4]),]
print(gvisTable(res,format = form,options = list(width = '100em')),type = 'html',file = file)
}
results[,'Genes']
head(results)
results = output$Results
results = results[results[,'Score'] <= cutoff,]
results = data.frame(results, miRNA.DE.pvalue = 2*pnorm(-abs(output$Zmi[results[,'miRNA']])),genes = rep(NA,dim(results)[1]))
results = results[,c(1,2,6,3,5,4)]
colnames(results) = c('microRNA','Pathway','Genes','Direction','microRNA DE p-value','Intergrative Score')
dir = 'mirpathways'
cutoff = 0.05
load('GeneSymbol.RData')
GeneSymbol = Symbol
results = output$Results
results = results[results[,'Score'] <= cutoff,]
results = data.frame(results, miRNA.DE.pvalue = 2*pnorm(-abs(output$Zmi[results[,'miRNA']])),genes = rep(NA,dim(results)[1]))
results = results[,c(1,2,6,3,5,4)]
colnames(results) = c('microRNA','Pathway','Genes','Direction','microRNA DE p-value','Intergrative Score')
head(results)
results[,'Genes']
paste('<a href=','"',gene.files,'" target="_blank">','genes','</a>',sep="")
results[,'Genes'] = paste('<a href=','"',gene.files,'" target="_blank">','genes','</a>',sep="")
library(googleVis)
form = as.list(rep('#.###',6))
names(form) = colnames(results)
print(gvisTable(as.data.frame(results),format = form,options = list(width = '100em')),type = 'html',file = 'pMimResults.html')
pMimHTML = function(output,dir = mirpathways,cutoff = 0.05,filename = 'pMimResults.html',GeneSymbol = NULL){
results = output$Results
results = results[results[,'Score'] <= cutoff,]
results = data.frame(results, miRNA.DE.pvalue = 2*pnorm(-abs(output$Zmi[results[,'miRNA']])),genes = rep(NA,dim(results)[1]))
results = results[,c(1,2,6,3,5,4)]
colnames(results) = c('microRNA','Pathway','Genes','Direction','microRNA DE p-value','Intergrative Score')
dir.create(dir)
gene.files = NULL
for(i in 1:dim(results)[1]){
miRNA = results[i,1]
path = results[i,2]
genes = intersect(output$targets[[miRNA]],output$pathways[[path]])
Correlation = output$cor[miRNA,genes]
corP = pnorm(output$corTransform[miRNA,genes]*sign(output$Zmi[miRNA]))
DE = pnorm(output$Zg[genes]*sign(output$Zmi[miRNA]))
if(!is.null(GeneSymbol))genes = GeneSymbol[genes]
res = data.frame(Genes = genes,'one sided DE p-value' = DE,Correlation = Correlation,'Probability of Negative Correlation' = corP)
form = as.list(rep('#.###',4))
names(form) = colnames(res)
file = paste(miRNA,'-',path,'.html',sep = '')
file = gsub('-','_',file)
file = paste(dir,file,sep= '/')
gene.files[i] = file
res = res[order(res[,4]),]
print(gvisTable(res,format = form,options = list(width = '100em')),type = 'html',file = file)
}
results[,'Genes'] = paste('<a href=','"',gene.files,'" target="_blank">','genes','</a>',sep="")
library(googleVis)
form = as.list(rep('#.###',6))
names(form) = colnames(results)
print(gvisTable(as.data.frame(results),format = form,options = list(width = '100em')),type = 'html',file = filename)
if(outputHTML = TRUE)gvisTable(as.data.frame(results),format = form,options = list(width = '100em'))
}
pMimHTML = function(output,dir = mirpathways,cutoff = 0.05,filename = 'pMimResults.html',GeneSymbol = NULL,outputHTML=FALSE){
results = output$Results
results = results[results[,'Score'] <= cutoff,]
results = data.frame(results, miRNA.DE.pvalue = 2*pnorm(-abs(output$Zmi[results[,'miRNA']])),genes = rep(NA,dim(results)[1]))
results = results[,c(1,2,6,3,5,4)]
colnames(results) = c('microRNA','Pathway','Genes','Direction','microRNA DE p-value','Intergrative Score')
dir.create(dir)
gene.files = NULL
for(i in 1:dim(results)[1]){
miRNA = results[i,1]
path = results[i,2]
genes = intersect(output$targets[[miRNA]],output$pathways[[path]])
Correlation = output$cor[miRNA,genes]
corP = pnorm(output$corTransform[miRNA,genes]*sign(output$Zmi[miRNA]))
DE = pnorm(output$Zg[genes]*sign(output$Zmi[miRNA]))
if(!is.null(GeneSymbol))genes = GeneSymbol[genes]
res = data.frame(Genes = genes,'one sided DE p-value' = DE,Correlation = Correlation,'Probability of Negative Correlation' = corP)
form = as.list(rep('#.###',4))
names(form) = colnames(res)
file = paste(miRNA,'-',path,'.html',sep = '')
file = gsub('-','_',file)
file = paste(dir,file,sep= '/')
gene.files[i] = file
res = res[order(res[,4]),]
print(gvisTable(res,format = form,options = list(width = '100em')),type = 'html',file = file)
}
results[,'Genes'] = paste('<a href=','"',gene.files,'" target="_blank">','genes','</a>',sep="")
library(googleVis)
form = as.list(rep('#.###',6))
names(form) = colnames(results)
print(gvisTable(as.data.frame(results),format = form,options = list(width = '100em')),type = 'html',file = filename)
if(outputHTML == TRUE)gvisTable(as.data.frame(results),format = form,options = list(width = '100em'))
}
pMimHTML(output,dir = 'mirpathways',cutoff = 0.05,filename = 'pMimResults.html',GeneSymbol = Symbol,outputHTML=TRUE)
require(googleVis)
miRNA = results[i,1]
path = results[i,2]
genes = intersect(output$targets[[miRNA]],output$pathways[[path]])
Correlation = output$cor[miRNA,genes]
corP = pnorm(output$corTransform[miRNA,genes]*sign(output$Zmi[miRNA]))
DE = pnorm(output$Zg[genes]*sign(output$Zmi[miRNA]))
if(!is.null(GeneSymbol))genes = GeneSymbol[genes]
res = data.frame(Genes = genes,'one sided DE p-value' = DE,Correlation = Correlation,'Probability of Negative Correlation' = corP)
form = as.list(rep('#.###',4))
names(form) = colnames(res)
file = paste(miRNA,'-',path,'.html',sep = '')
file = gsub('-','_',file)
file = paste(dir,file,sep= '/')
gene.files[i] = file
res = res[order(res[,4]),]
res
i
i = 1
miRNA = results[i,1]
path = results[i,2]
genes = intersect(output$targets[[miRNA]],output$pathways[[path]])
Correlation = output$cor[miRNA,genes]
corP = pnorm(output$corTransform[miRNA,genes]*sign(output$Zmi[miRNA]))
DE = pnorm(output$Zg[genes]*sign(output$Zmi[miRNA]))
if(!is.null(GeneSymbol))genes = GeneSymbol[genes]
res = data.frame(Genes = genes,'one sided DE p-value' = DE,Correlation = Correlation,'Probability of Negative Correlation' = corP)
form = as.list(rep('#.###',4))
names(form) = colnames(res)
file = paste(miRNA,'-',path,'.html',sep = '')
file = gsub('-','_',file)
file = paste(dir,file,sep= '/')
gene.files[i] = file
res = res[order(res[,4]),]
res
genes
path
miRNA
intersect(output$targets[[miRNA]],output$pathways[[path]])
miRNA = as.character(results[i,1])
path = as.character(results[i,2])
genes = intersect(output$targets[[miRNA]],output$pathways[[path]])
genes
miRNA = as.character(results[i,1])
path = as.character(results[i,2])
genes = intersect(output$targets[[miRNA]],output$pathways[[path]])
Correlation = output$cor[miRNA,genes]
corP = pnorm(output$corTransform[miRNA,genes]*sign(output$Zmi[miRNA]))
DE = pnorm(output$Zg[genes]*sign(output$Zmi[miRNA]))
if(!is.null(GeneSymbol))genes = GeneSymbol[genes]
res = data.frame(Genes = genes,'one sided DE p-value' = DE,Correlation = Correlation,'Probability of Negative Correlation' = corP)
form = as.list(rep('#.###',4))
names(form) = colnames(res)
file = paste(miRNA,'-',path,'.html',sep = '')
file = gsub('-','_',file)
file = paste(dir,file,sep= '/')
gene.files[i] = file
res = res[order(res[,4]),]
res
?library
library(googleVis,verbose = FALSE)
?ggogeVis
install.packages("C:/Users/Ellis/Dropbox/R packages/sydSeq/sydSeq_1.1.4.zip", repos = NULL)
library(pMim)
library(sydSeq)
?pMim
?outputHTML
?pMimHTML
??pMimHTML
pMimHTML
pMim
?pMim
?pMimHTML
pMimHTML
pMimHTML
